/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scss/style.scss":
/*!*****************************!*\
  !*** ./src/scss/style.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://project-template/./src/scss/style.scss?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_script_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js/script.js */ \"./src/js/script.js\");\n/* harmony import */ var _js_script_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_js_script_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _scss_style_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scss/style.scss */ \"./src/scss/style.scss\");\n\r\n\r\n\n\n//# sourceURL=webpack://project-template/./src/index.js?");

/***/ }),

/***/ "./src/js/script.js":
/*!**************************!*\
  !*** ./src/js/script.js ***!
  \**************************/
/***/ (() => {

eval("/**\r\n * Erstellt am: 31.08.2023\r\n */\r\n//########################################\r\n//*ANCHOR - Variables\r\n//########################################\r\nlet shoppinglist = [];\r\nlet products = [];\r\nlet weeklylist = [];\r\n\r\nlet save_obj = {\r\n    saved_shoppinglist: [],\r\n    saved_products: [],\r\n    saved_weekly_list: [],\r\n};\r\n\r\nlet current_product;\r\n\r\n//########################################\r\n//*ANCHOR - Elements\r\n//########################################\r\nconst shopping_list = document.getElementById('shopping_list');\r\nconst all_products = document.getElementById('all_products');\r\nconst shopping_sum_label = document.getElementById('shopping_sum_label');\r\nconst prod_modal_label = document.getElementById('prod_modal_label');\r\nconst products_modal = document.getElementById('products_modal');\r\nconst action_check = document.getElementById('action_check');\r\nconst action_delete = document.getElementById('action_delete');\r\nconst action_modal = document.getElementById('action_modal');\r\nconst action_edit = document.getElementById('action_edit');\r\nconst btn_show_list = document.getElementById('btn_show_list');\r\nconst inp_prod = document.getElementById('inp_prod');\r\nconst btn_submit = document.getElementById('btn_submit');\r\nconst edit_modal = document.getElementById('edit_modal');\r\nconst inp_price = document.getElementById('inp_price');\r\nconst inp_amount = document.getElementById('inp_amount');\r\nconst to_weeklyList_ToggleButton = document.getElementById(\"to_weeklyList_ToggleButton\");\r\nconst btn_submit_edit = document.getElementById('btn_submit_edit');\r\nconst btn_delete_shoppinglist = document.getElementById(\"btn_delete_shoppinglist\");\r\nconst btn_delete_product = document.getElementById(\"btn_delete_product\");\r\nconst btn_trigger_weekly_list = document.getElementById(\"btn_trigger_weekly_list\");\r\nconst lbl_products_info = document.getElementById(\"lbl_products_info\");\r\n\r\n\r\n\r\nconst xbuttons = document.querySelectorAll('.xbutton');\r\nconst modals = document.querySelectorAll('.modal');\r\nconst productLabels = document.querySelectorAll('.productLabel');\r\n\r\n\r\n//########################################\r\n//*ANCHOR -  Class\r\n//########################################\r\nclass Product {\r\n    constructor(product_id, product_name, product_price) {\r\n        this.product_id = product_id;\r\n        this.product_name = product_name;\r\n        this.product_price = product_price;\r\n        this.is_on_list = false;\r\n        this.is_open = false;\r\n        this.amount = 1;\r\n        this.on_weekly_list = false;\r\n    }\r\n}\r\n\r\n\r\n//########################################\r\n//*ANCHOR -  Init\r\n//########################################\r\n\r\nwindow.onload = init();\r\n\r\n\r\nfunction init() {\r\n    load_local_storage();\r\n    update_lists();\r\n}\r\n\r\n//########################################\r\n//*ANCHOR -  Window Onload Load Local Storage\r\n//########################################\r\nfunction load_local_storage() {\r\n    if (localStorage.getItem('stored_shopping_saveobj') != '') {\r\n        try {\r\n            save_obj = JSON.parse(\r\n                localStorage.getItem('stored_shopping_saveobj'),\r\n            );\r\n            products = save_obj.saved_products;\r\n\r\n            try {\r\n                lbl_products_info.innerHTML = `${products.length} Produkte vorhanden`;\r\n            } catch (error) { }\r\n            shoppinglist = save_obj.saved_shoppinglist;\r\n            try {\r\n                weeklylist = save_obj.saved_weekly_list;\r\n                if (weeklylist === undefined) {\r\n                    weeklylist = [];\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            save_obj = {\r\n                saved_shoppinglist: [],\r\n                saved_products: [],\r\n                saved_weekly_list: [],\r\n            };\r\n            save_obj.saved_products = products;\r\n            save_obj.saved_shoppinglist = shoppinglist;\r\n            save_obj.saved_weekly_list = weeklylist;\r\n        }\r\n    }\r\n}\r\n\r\n//########################################\r\n//*ANCHOR -  Save to local Storage\r\n//########################################\r\nfunction save_into_storage() {\r\n    localStorage.setItem('stored_shopping_saveobj', JSON.stringify(save_obj));\r\n}\r\n\r\n//########################################\r\n//*ANCHOR -  Render Shopping list\r\n//########################################\r\nfunction render_shopping_list() {\r\n    shopping_list.innerHTML = '';\r\n    let calculated_shopping_sum = 0;\r\n    if (shoppinglist.length === 0) {\r\n        let empty_Label = document.createElement('h2');\r\n        empty_Label.innerHTML = 'Dein Einkaufszettel ist leer 🛒';\r\n        empty_Label.classList.add('empty-label'); // Not in use yet\r\n        shopping_list.appendChild(empty_Label);\r\n        btn_delete_shoppinglist.style.display = 'none';\r\n    } else {\r\n        btn_delete_shoppinglist.style.display = 'block';\r\n    }\r\n    //* Loop shopping list\r\n    shoppinglist.forEach((product) => {\r\n        try {\r\n            const price = product.amount * product.product_price;\r\n            calculated_shopping_sum += price;\r\n        } catch (error) {\r\n            console.log('Calc_error', error);\r\n        }\r\n\r\n        let prod_container = document.createElement('div');\r\n        let amount_label = document.createElement('p');\r\n        if (product.product_price > 0) {\r\n            amount_label.innerHTML = `${product.amount} x ${product.product_price} €`;\r\n            amount_label.classList.add(\"bigger-label\")\r\n        } else {\r\n            amount_label.innerHTML = product.amount;\r\n        }\r\n        amount_label.classList.add('amount-label');\r\n\r\n        //* Product name div\r\n        let product_name_div = document.createElement('div');\r\n        product_name_div.innerHTML = product.product_name;\r\n        product_name_div.classList.add('product-name-div');\r\n        prod_container.appendChild(product_name_div);\r\n\r\n        prod_container.classList.add('product');\r\n        render_color(product, prod_container);\r\n        // On Click, push item to shopping list\r\n        prod_container.onclick = () => {\r\n            //*Öffne neues Modal und übergebe prod\r\n            action_modal.classList.add('active-mini');\r\n            activate_xbuttons('action_x');\r\n            current_product = product;\r\n            prod_modal_label.innerText = product.product_name;\r\n        };\r\n\r\n        prod_container.appendChild(amount_label);\r\n        shopping_list.appendChild(prod_container);\r\n    });\r\n    shopping_sum_label.innerHTML = `${calculated_shopping_sum.toFixed(2)} €`;\r\n}\r\n\r\n//########################################\r\n//* ANCHOR -  //* Toggle check for product\r\n//########################################\r\naction_check.addEventListener(\"click\", () => {\r\n    if (current_product.is_open) {\r\n        current_product.is_open = false;\r\n        set_product_at_the_end();\r\n    } else {\r\n        current_product.is_open = true;\r\n        set_product_at_the_start();\r\n    }\r\n    save_obj.saved_shoppinglist = shoppinglist;\r\n    save_into_storage();\r\n    update_lists()\r\n    close_all_modals();\r\n})\r\n\r\n//########################################\r\n// //*ANCHOR - Open Edit Modal\r\n//########################################\r\n\r\naction_edit.addEventListener(\"click\", () => {\r\n    open_edit_modal()\r\n})\r\n\r\nfunction open_edit_modal() {\r\n    edit_modal.classList.add('active')\r\n    activate_xbuttons('edit_x');\r\n    productLabels.forEach((prod_label) => {\r\n        prod_label.innerText = current_product.product_name;\r\n    });\r\n    inp_price.value = current_product.product_price;\r\n    inp_amount.value = current_product.amount;\r\n\r\n    // Set the toggle button if on list or not\r\n    const on_weekly_list_status = check_if_product_is_on_weeklyShoppingList();\r\n    if (on_weekly_list_status === false) {\r\n        to_weeklyList_ToggleButton.checked = true;\r\n        setTimeout(() => {\r\n            to_weeklyList_ToggleButton.checked = false;\r\n        }, 250);\r\n    } else {\r\n        to_weeklyList_ToggleButton.checked = false;\r\n        setTimeout(() => {\r\n            to_weeklyList_ToggleButton.checked = true;\r\n        }, 250);\r\n    }\r\n}\r\n\r\n//########################################\r\n//*ANCHOR - Event Listener for remove button\r\n//########################################\r\naction_delete.addEventListener('click', () => {\r\n    delete_from_shoppinglist();\r\n    close_all_modals();\r\n})\r\n\r\n//########################################\r\n//*ANCHOR - Remove one product from shopping list\r\n//########################################\r\nfunction delete_from_shoppinglist() {\r\n    if (current_product.is_on_list) {\r\n        // uncheck on productlist\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (current_product.product_name === products[i].product_name) {\r\n                products[i].is_on_list = false;\r\n                products[i].is_open = false;\r\n            }\r\n        }\r\n\r\n        // Delete from shoppinglist\r\n        for (let i = 0; i < shoppinglist.length; i++) {\r\n            if (current_product.product_name === shoppinglist[i].product_name) {\r\n                shoppinglist.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    save_obj.saved_shoppinglist = shoppinglist;\r\n    save_obj.saved_products = products;\r\n    save_into_storage();\r\n    update_lists()\r\n}\r\n\r\n\r\n\r\n//########################################\r\n//*ANCHOR - Render Product list\r\n//########################################\r\nfunction render_Product_list(arr) {\r\n    all_products.innerHTML = '';\r\n    // Loop product list\r\n    arr.forEach((product) => {\r\n        let prod_container = document.createElement('div');\r\n        let amount_label = document.createElement('p');\r\n        let edit_button = document.createElement('div');\r\n        let add_remove_button = document.createElement('div');\r\n        amount_label.innerHTML = `${product.product_price} €`;\r\n        amount_label.classList.add('amount-label');\r\n        //* Product name div\r\n        let product_name_div = document.createElement('div');\r\n        product_name_div.innerHTML = product.product_name;\r\n        product_name_div.classList.add('product-name-div');\r\n        prod_container.appendChild(product_name_div);\r\n        prod_container.classList.add('product');\r\n        render_color(product, prod_container, 'prod');\r\n        edit_button.classList.add('tile-edit-button');\r\n        edit_button.innerHTML = '🖊️';\r\n        // add_remove_button.innerHTML = '+ -';\r\n        add_remove_button.classList.add('add-remove-button');\r\n\r\n        //* Onclick for add remove btn\r\n        add_remove_button.addEventListener('click', () => {\r\n            //* If product is already on list\r\n            if (!shoppinglist.includes(product)) {\r\n                shoppinglist.push(product);\r\n                product.is_on_list = true;\r\n                product.is_open = true;\r\n                save_obj.saved_shoppinglist = shoppinglist;\r\n                save_into_storage();\r\n            } else {\r\n                //* Delete from shoppinglist\r\n                current_product = product;\r\n                delete_from_shoppinglist()\r\n            }\r\n\r\n            update_lists();\r\n        })\r\n\r\n        // //* On Click, push item to shopping list\r\n        edit_button.addEventListener('click', () => {\r\n            current_product = product;\r\n            open_edit_modal();\r\n        })\r\n\r\n        prod_container.appendChild(amount_label);\r\n        prod_container.appendChild(edit_button);\r\n        prod_container.appendChild(add_remove_button);\r\n\r\n        all_products.appendChild(prod_container);\r\n    });\r\n}\r\n\r\n//########################################\r\n//*ANCHOR - Save Edit changes\r\n//########################################\r\nbtn_submit_edit.addEventListener(\"click\", () => {\r\n    if (inp_amount.value !== '') {\r\n        let new_amount_raw = inp_amount.value;\r\n        let new_amount = new_amount_raw.replace(',', '.');\r\n        parseFloat(new_amount);\r\n        current_product.amount = new_amount;\r\n\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (current_product.product_name === products[i].product_name) {\r\n                products[i].amount = new_amount;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < shoppinglist.length; i++) {\r\n            if (current_product.product_name === shoppinglist[i].product_name) {\r\n                shoppinglist[i].amount = new_amount;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < weeklylist.length; i++) {\r\n            if (current_product.product_name === weeklylist[i].product_name) {\r\n                weeklylist[i].amount = new_amount;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (inp_price.value !== '') {\r\n        let new_price_raw = inp_price.value;\r\n        let new_price = new_price_raw.replace(',', '.');\r\n        parseFloat(new_price);\r\n        current_product.product_price = new_price;\r\n\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (current_product.product_name === products[i].product_name) {\r\n                products[i].product_price = new_price;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < shoppinglist.length; i++) {\r\n            if (current_product.product_name === shoppinglist[i].product_name) {\r\n                shoppinglist[i].product_price = new_price;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < weeklylist.length; i++) {\r\n            if (current_product.product_name === weeklylist[i].product_name) {\r\n                weeklylist[i].product_price = new_price;\r\n            }\r\n        }\r\n    }\r\n\r\n    save_obj.saved_products = products;\r\n    save_obj.saved_shoppinglist = shoppinglist;\r\n\r\n    save_into_storage();\r\n    update_lists()\r\n    close_all_modals();\r\n\r\n})\r\n\r\n//########################################\r\n//*ANCHOR -  set On / Off Weekly shopping list\r\n//########################################\r\nto_weeklyList_ToggleButton.addEventListener('click', () => {\r\n    const on_weekly_list_status = check_if_product_is_on_weeklyShoppingList();\r\n    if (on_weekly_list_status === false) {\r\n        current_product.on_weekly_list = true;\r\n\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (current_product.product_name === products[i].product_name) {\r\n                products[i].on_weekly_list = true;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < shoppinglist.length; i++) {\r\n            if (current_product.product_name === shoppinglist[i].product_name) {\r\n                products[i].on_weekly_list = true;\r\n            }\r\n        }\r\n\r\n        // Zur eigenrlichen Liste hinzufügen\r\n        weeklylist.push(current_product);\r\n    } else {\r\n        current_product.on_weekly_list = false;\r\n\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (current_product.product_name === products[i].product_name) {\r\n                products[i].on_weekly_list = false;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < shoppinglist.length; i++) {\r\n            if (current_product.product_name === shoppinglist[i].product_name) {\r\n                products[i].on_weekly_list = false;\r\n            }\r\n        }\r\n\r\n        // aus Liste entfernen\r\n        for (let i = 0; i < weeklylist.length; i++) {\r\n            if (current_product.product_name === weeklylist[i].product_name) {\r\n                weeklylist.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Speichern\r\n    save_obj.saved_products = products;\r\n    save_obj.saved_shoppinglist = shoppinglist;\r\n    save_obj.saved_weekly_list = weeklylist;\r\n    save_into_storage();\r\n})\r\n\r\n//########################################\r\n//*ANCHOR - check if prod is on weekly list\r\n//########################################\r\n\r\nfunction check_if_product_is_on_weeklyShoppingList() {\r\n    const product_is_on_weekly_list = current_product.on_weekly_list;\r\n    let on_weekly_list_status = undefined;\r\n\r\n    if (product_is_on_weekly_list === undefined) {\r\n        current_product.on_weekly_list = false;\r\n        on_weekly_list_status = false;\r\n    } else if (product_is_on_weekly_list === false) {\r\n        on_weekly_list_status = false;\r\n    } else {\r\n        on_weekly_list_status = true;\r\n    }\r\n\r\n    return on_weekly_list_status;\r\n\r\n}\r\n\r\n\r\n//########################################\r\n//*ANCHOR - Colorize Tile if is open\r\n//########################################\r\nfunction render_color(product, tile, list) {\r\n    if (list === 'prod') {\r\n        if (product.is_on_list === true) {\r\n            tile.classList.add('on-list');\r\n        } else {\r\n            tile.classList.remove('on-list');\r\n        }\r\n    } else {\r\n        if (product.is_open === true) {\r\n            tile.classList.add('item-open');\r\n        } else {\r\n            tile.classList.remove('item-open');\r\n        }\r\n    }\r\n}\r\n\r\n//########################################\r\n//*ANCHOR - Set Product at the last pos\r\n//########################################\r\nfunction set_product_at_the_end() {\r\n    const product = current_product;\r\n    const arrIndex = shoppinglist.indexOf(product);\r\n    const lastPos = shoppinglist.length;\r\n    if (arrIndex === -1) {\r\n        shoppinglist.splice(0, 0, product);\r\n    } else {\r\n        shoppinglist.splice(arrIndex, 1);\r\n        shoppinglist.splice(lastPos, 0, product);\r\n    }\r\n}\r\n\r\n//########################################\r\n//*ANCHOR - Set Product at the first pos\r\n//########################################\r\nfunction set_product_at_the_start() {\r\n    const product = current_product;\r\n    const arrIndex = shoppinglist.indexOf(product);\r\n    if (arrIndex === -1) {\r\n        shoppinglist.splice(0, 0, product);\r\n    } else {\r\n        shoppinglist.splice(arrIndex, 1);\r\n        shoppinglist.splice(0, 0, product);\r\n    }\r\n}\r\n\r\n//########################################\r\n//*ANCHOR - Modal\r\n//########################################\r\nbtn_show_list.addEventListener('click', () => {\r\n    products_modal.classList.add('active');\r\n    activate_xbuttons('prod_x');\r\n\r\n    if (weeklylist.length > 0) {\r\n        btn_trigger_weekly_list.classList.add(\"active\");\r\n        btn_trigger_weekly_list.innerHTML = `Wocheneinkauf (${weeklylist.length})`;\r\n    } else {\r\n        btn_trigger_weekly_list.classList.remove(\"active\");\r\n    }\r\n});\r\n\r\n//########################################\r\n// ? Activate X Buttons\r\n//########################################\r\nfunction activate_xbuttons(id) {\r\n    xbuttons.forEach((xbutton) => {\r\n        if (xbutton.id === id) {\r\n            xbutton.classList.add('active');\r\n        }\r\n    });\r\n}\r\n\r\n//########################################\r\n// ? Hide x buttons\r\n//########################################\r\nfunction hide_xbuttons() {\r\n    xbuttons.forEach((xbutton) => {\r\n        xbutton.classList.remove('active');\r\n    });\r\n}\r\n\r\n//########################################\r\n//* close Modals\r\n//########################################\r\nxbuttons.forEach((xbutton) => {\r\n    xbutton.addEventListener('click', () => {\r\n        close_all_modals()\r\n    });\r\n});\r\n\r\n//########################################\r\n// ? Close all Modals\r\n//########################################\r\nfunction close_all_modals() {\r\n    modals.forEach((modal) => {\r\n        modal.classList.remove('active');\r\n        hide_xbuttons();\r\n        action_modal.classList.remove('active-mini');\r\n    });\r\n}\r\n\r\n//########################################\r\n//*ANCHOR - Add new Product\r\n//########################################\r\n\r\nbtn_submit.addEventListener('click', () => {\r\n    add_new_product();\r\n});\r\n\r\n//########################################\r\n// ? Add Product if enter key is pressed\r\n//########################################\r\nwindow.addEventListener('keydown', (e) => {\r\n    if (e.key === 'Enter') {\r\n        add_new_product();\r\n    }\r\n});\r\n\r\nfunction add_new_product() {\r\n    const new_product_name = inp_prod.value;\r\n    if (new_product_name.length > 0) {\r\n        let product_exists = false;\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (new_product_name === products[i].product_name) {\r\n                product_exists = true;\r\n                break;\r\n            }\r\n        }\r\n        if (product_exists === false) {\r\n            const prod = new Product(\r\n                uniqueID_Generator(),\r\n                new_product_name,\r\n                0.0,\r\n            );\r\n            prod.is_on_list = true;\r\n            prod.is_open = true;\r\n            products.unshift(prod);\r\n            shoppinglist.unshift(prod)\r\n            save_obj.saved_products = products;\r\n            inp_prod.value = '';\r\n            save_into_storage();\r\n            update_lists()\r\n            // Edit Modal\r\n            edit_modal.classList.add('active')\r\n            activate_xbuttons('edit_x');\r\n            current_product = prod;\r\n            productLabels.forEach((prod_label) => {\r\n                prod_label.innerText = current_product.product_name;\r\n            });\r\n            inp_price.value = current_product.product_price;\r\n            inp_amount.value = current_product.amount;\r\n\r\n        } else {\r\n            //TODO - Hier könnte man die Logik implementieren, dass das Produkt auf die Shoppinglist gesetzt wird\r\n        }\r\n    }\r\n}\r\n\r\n//########################################\r\n// *ANCHOR - Function to give random id\r\n//########################################\r\nfunction uniqueID_Generator() {\r\n    const rndStuff = [\r\n        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',\r\n        'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '$', '!', '1', '2', '3', '4', '8', '7',\r\n        '6', '5', '9', '0', '#',\r\n    ];\r\n    let key = '';\r\n    for (let i = 1; i <= 36; i++) {\r\n        key += rndStuff[parseInt(Math.random() * rndStuff.length)];\r\n    }\r\n    return key;\r\n}\r\n\r\n\r\n//########################################\r\n//*ANCHOR - Delete shopping list\r\n//########################################\r\n\r\nbtn_delete_shoppinglist.addEventListener(\"click\", () => {\r\n\r\n    const decision = window.confirm(\"Sollen alle Produkte auf der Einkaufsliste entfernt werden?\")\r\n\r\n    if (decision) {\r\n        for (let i = 0; i < shoppinglist.length; i++) {\r\n            shoppinglist[i].is_on_list = false;\r\n            shoppinglist[i].is_open = false;\r\n        }\r\n        for (let i = 0; i < products.length; i++) {\r\n            products[i].is_on_list = false;\r\n            products[i].is_open = false;\r\n        }\r\n        shoppinglist = [];\r\n        update_lists();\r\n        save_obj.saved_products = products;\r\n        save_obj.saved_shoppinglist = shoppinglist;\r\n        save_into_storage();\r\n    }\r\n})\r\n\r\n\r\n//########################################\r\n//*ANCHOR - Delete Product forever\r\n//########################################\r\nbtn_delete_product.addEventListener(\"click\", () => {\r\n\r\n    const decision = window.confirm(`Soll das Produkt \"${current_product.product_name}\" für immer gelöscht werden?`)\r\n\r\n    if (decision) {\r\n        for (let i = 0; i < shoppinglist.length; i++) {\r\n            if (current_product.product_name === shoppinglist[i].product_name) {\r\n                shoppinglist.splice(i, 1);\r\n            }\r\n        }\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (current_product.product_name === products[i].product_name) {\r\n                products.splice(i, 1);\r\n            }\r\n        }\r\n        for (let i = 0; i < weeklylist.length; i++) {\r\n            if (current_product.product_name === weeklylist[i].product_name) {\r\n                weeklylist.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        update_lists()\r\n        save_obj.saved_products = products;\r\n        save_obj.saved_shoppinglist = shoppinglist;\r\n        save_obj.saved_weekly_list = weeklylist;\r\n        save_into_storage();\r\n        close_all_modals();\r\n    }\r\n})\r\n\r\n\r\n//########################################\r\n//*ANCHOR - Updage List and clean up\r\n//########################################\r\nfunction update_lists() {\r\n    render_shopping_list();\r\n    render_Product_list(products);\r\n    inp_prod.value = '';\r\n}\r\n\r\n\r\n\r\n\r\n//########################################\r\n//*ANCHOR - Filter Function for typing in product modal input field\r\n//########################################\r\n\r\ninp_prod.oninput = () => {\r\n    const current_inp = inp_prod.value;\r\n    let products_filtered = [];\r\n\r\n    for (let i = 0; i < products.length; i++) {\r\n        const product_name_uppercase = products[i].product_name.toUpperCase()\r\n        const inp_uppercase = current_inp.toUpperCase()\r\n        if (product_name_uppercase.includes(inp_uppercase)) {\r\n            products_filtered.push(products[i])\r\n        }\r\n    }\r\n    render_Product_list(products_filtered)\r\n}\r\n\r\n\r\nconst weeklyItems_Holder = document.getElementById('weeklyItems_Holder');\r\nconst weeklyShopping_modal = document.getElementById('weeklyShopping_modal');\r\nconst weeklyShopping_x = document.getElementById('weeklyShopping_x');\r\nconst btn_save_weekly_list = document.getElementById('btn_save_weekly_list');\r\n\r\n//*ANCHOR - Weekly List\r\nbtn_trigger_weekly_list.addEventListener('click', () => {\r\n\r\n    //* Reset weeklyItems_Holder\r\n    weeklyItems_Holder.innerHTML = '';\r\n\r\n    // * Display Modal an x Btn\r\n    weeklyShopping_modal.classList.add('active');\r\n    weeklyShopping_x.classList.add('active');\r\n\r\n    //* loop weekly list and generate checklist items\r\n    weeklylist.forEach((prod, index) => {\r\n        let itemdiv = document.createElement('div');\r\n        itemdiv.classList.add('select-item');\r\n\r\n        let itemInp = document.createElement('input');\r\n        itemInp.type = 'checkbox';\r\n        itemInp.id = prod.product_id;\r\n        itemInp.checked = true;\r\n        itemInp.value = true;\r\n        itemInp.name = prod.product_name;\r\n        itemInp.classList.add('inp-check');\r\n        itemInp.setAttribute('data-index', index)\r\n\r\n        let itemLabel = document.createElement('label');\r\n        itemLabel.innerHTML = prod.product_name;\r\n        itemLabel.setAttribute('for', prod.product_id);\r\n\r\n        itemdiv.appendChild(itemInp);\r\n        itemdiv.appendChild(itemLabel);\r\n\r\n        weeklyItems_Holder.appendChild(itemdiv);\r\n    })\r\n})\r\n\r\n// *ANCHOR - Add weekly products on list\r\nbtn_save_weekly_list.addEventListener('click', () => {\r\n    const weeklyItemHoldr = document.querySelectorAll('.inp-check')\r\n    let success_counter = 0;\r\n    weeklyItemHoldr.forEach((item) => {\r\n        const isChecked = item.checked;\r\n        const name = item.name;\r\n        if (isChecked) {\r\n            let product_is_already_on_shoppinglist = false;\r\n\r\n            for (let j = 0; j < shoppinglist.length; j++) {\r\n                if (name === shoppinglist[j].product_name) {\r\n                    product_is_already_on_shoppinglist = true;\r\n                }\r\n            }\r\n\r\n            if (product_is_already_on_shoppinglist === false) {\r\n                success_counter++;\r\n                const weeklyListIndex = item.getAttribute('data-index');\r\n                const product = weeklylist[weeklyListIndex];\r\n                product.is_on_list = true;\r\n                product.is_open = true;\r\n                shoppinglist.push(product);\r\n\r\n                for (let j = 0; j < products.length; j++) {\r\n                    if (name === products[j].product_name) {\r\n                        products[j].is_on_list = true;\r\n                        products[j].is_open = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    if (success_counter === 0) {\r\n        alert('Es konnten keine Produkte auf die Einkaufsliste gesetzt werden, da sie sich bereits auf dieser befinden')\r\n    } else {\r\n        alert(`${success_counter} Produkte wurden zur Einkaufsliste hinzugefügt.`);\r\n    }\r\n\r\n    save_obj.saved_shoppinglist = shoppinglist;\r\n    save_obj.saved_products = products;\r\n    save_into_storage();\r\n    update_lists();\r\n    close_all_modals();\r\n})\r\n\r\n//*ANCHOR - Mark Value when user clicks on inputfield\r\ninp_price.addEventListener('click', ()=> {\r\n    if (inp_price.value) {\r\n        inp_price.select();\r\n    }\r\n});\r\ninp_amount.addEventListener('click', ()=> {\r\n    if (inp_amount.value) {\r\n        inp_amount.select();\r\n    }\r\n});\n\n//# sourceURL=webpack://project-template/./src/js/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;